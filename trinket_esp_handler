-- trinket_esp_handler.lua
local Workspace = game:GetService("Workspace")

-- Table of known MeshIds for trinket identification
local MESH_ID_MAP = {
    ["rbxassetid://5196551436"] = "Amulet",
    ["rbxassetid://5196577540"] = "Old Amulet",
    ["rbxassetid://5204003946"] = "Goblet",
    ["rbxassetid://5196782997"] = "Old Ring",
    ["rbxassetid://5196776695"] = "Ring",
    ["rbxassetid://5204453430"] = "Scroll",
    ["rbxassetid://2877143560"] = "Ruby",
    ["rbxassetid://2877143592"] = "Sapphire",
    ["rbxassetid://2877143624"] = "Emerald",
    ["rbxassetid://2520762076"] = "Howler Friend"
    -- Add other MeshIds as needed
}

-- Retrieves the mesh ID from a part, checking MeshPart, SpecialMesh, or Mesh
local function getMeshId(part)
    if part:IsA("MeshPart") then
        return part.MeshId
    end
    local specialMesh = part:FindFirstChildWhichIsA("SpecialMesh")
    if specialMesh then
        return specialMesh.MeshId
    end
    local mesh = part:FindFirstChildWhichIsA("Mesh")
    if mesh then
        return mesh.MeshId
    end
    return nil
end

-- Determines the display name of a trinket based on its mesh ID or part name
local function getTrinketNameByMeshId(part)
    local meshId = getMeshId(part)
    if meshId then
        return MESH_ID_MAP[meshId] or meshId
    end
    return part.Name
end

-- Creates a BillboardGui with standard properties for ESP
local function createBillboardGui(adornee)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "TrinketESP"
    billboard.Adornee = adornee
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 100, 0, 100)
    return billboard
end

-- Creates a TextLabel with standard properties for the billboard
local function createTextLabel(parent, text)
    local label = Instance.new("TextLabel")
    label.Text = text
    label.TextColor3 = Color3.fromRGB(157, 157, 157)
    label.TextSize = 14
    label.Font = Enum.Font.SourceSans
    label.BackgroundTransparency = 1
    label.Size = UDim2.new(1, 0, 1, 0)
    label.Position = UDim2.new(0.5, 0, 0.5, 0)
    label.AnchorPoint = Vector2.new(0.5, 0.5)
    label.TextStrokeTransparency = 0.5
    return label
end

-- TrinketESP class for managing trinket visual indicators
local TrinketESP = {}
TrinketESP.__index = TrinketESP

-- Initializes a new TrinketESP instance
function TrinketESP.new()
    local self = setmetatable({}, TrinketESP)
    self.espBillboards = {}           -- Stores billboard instances for each trinket
    self.connections = {}             -- Stores event connections
    self.enabled = false              -- Tracks if ESP is active
    return self
end

-- Checks if an object is a valid trinket (BasePart with an "ID" StringValue)
local function isValidTrinket(obj)
    return obj:IsA("BasePart") and obj:FindFirstChild("ID") and obj:FindFirstChild("ID"):IsA("StringValue")
end

-- Creates a billboard for a trinket if it doesn't already exist
function TrinketESP:createBillboard(trinket)
    if self.espBillboards[trinket] then return end
    local billboard = createBillboardGui(trinket)
    local meshName = getTrinketNameByMeshId(trinket)
    local label = createTextLabel(billboard, meshName)
    billboard.Parent = trinket
    self.espBillboards[trinket] = billboard
end

-- Removes the billboard associated with a trinket
function TrinketESP:removeBillboard(trinket)
    local billboard = self.espBillboards[trinket]
    if billboard then
        billboard:Destroy()
        self.espBillboards[trinket] = nil
    end
end

-- Initializes billboards for all existing trinkets in Workspace
function TrinketESP:initializeTrinkets()
    for _, obj in ipairs(Workspace:GetChildren()) do
        if isValidTrinket(obj) then
            self:createBillboard(obj)
        end
    end
end

-- Enables the ESP, setting up event listeners and initial trinkets
function TrinketESP:enable()
    if self.enabled then return end
    self.enabled = true
    self:initializeTrinkets()
    self.connections.childAdded = Workspace.ChildAdded:Connect(function(child)
        if isValidTrinket(child) then
            self:createBillboard(child)
        end
    end)
    self.connections.childRemoved = Workspace.ChildRemoved:Connect(function(child)
        self:removeBillboard(child)
    end)
end

-- Disables the ESP, disconnecting events and removing billboards
function TrinketESP:disable()
    if not self.enabled then return end
    self.enabled = false
    for _, connection in pairs(self.connections) do
        connection:Disconnect()
    end
    self.connections = {}
    for trinket in pairs(self.espBillboards) do
        self:removeBillboard(trinket)
    end
end

return TrinketESP
