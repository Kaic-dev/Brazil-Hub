function AutoAim:enable()
    if self.enabled then return end
    self.enabled = true

    -- Função de predição (perfeita para skills)
    local function predictPosition(character, targetNPC, projectileSpeed, attackDelay, toolName, studsBehindMin, studsBehindMax)
        local npcHRP = targetNPC:FindFirstChild("HumanoidRootPart")
        local npcHead = targetNPC:FindFirstChild("Head")
        if not npcHead or not npcHRP then return nil end

        local startPos = character.HumanoidRootPart.Position
        local targetPos = npcHead.Position
        local velocity = Vector3.new(npcHRP.Velocity.X, 0, npcHRP.Velocity.Z) -- Apenas horizontal (XZ)

        local distance = (targetPos - startPos).Magnitude
        local timeToHit = distance / projectileSpeed
        local totalTime = timeToHit + attackDelay

        -- Predição iterativa para refinar a precisão
        local predictedPosition = targetPos
        for _ = 1, 5 do
            predictedPosition = npcHead.Position + velocity * totalTime
            distance = (predictedPosition - startPos).Magnitude
            timeToHit = distance / projectileSpeed
            totalTime = timeToHit + attackDelay
        end

        -- Corrige o Y para o nível atual da cabeça
        predictedPosition = Vector3.new(predictedPosition.X, npcHead.Position.Y, predictedPosition.Z)

        -- Ajuste de posição dependendo da arma
        local hitPosition
        if toolName == "Percutiens" then
            local direction = (predictedPosition - startPos).Unit
            hitPosition = predictedPosition + direction * math.random(studsBehindMin, studsBehindMax)
        else
            hitPosition = predictedPosition + Vector3.new(0, -2, 0)
        end

        return hitPosition
    end

    RemoteFunction.OnClientInvoke = function()
        local character = LocalPlayer.Character
        if not character then
            return {
                Hit     = Mouse.Hit,
                Target  = Mouse.Target,
                UnitRay = Mouse.UnitRay,
                X       = Mouse.X,
                Y       = Mouse.Y
            }
        end

        local equippedTool = character:FindFirstChildOfClass("Tool")
        local areaMarkers  = Workspace:FindFirstChild("AreaMarkers")
        if areaMarkers then
            Mouse.TargetFilter = areaMarkers:FindFirstChild("The Arena")
        end

        if equippedTool and self.toolNames[equippedTool.Name] then
            local targetNPC = self:getBestNPC(character)
            print(targetNPC)

            if targetNPC then
                local projectileSpeed = 300 -- Velocidade da skill (ajuste conforme sua skill)
                local attackDelay = 0
                if equippedTool.Name == "Percutiens" then
                    attackDelay = 1.5
                end

                local hitPosition = predictPosition(
                    character,
                    targetNPC,
                    projectileSpeed,
                    attackDelay,
                    equippedTool.Name,
                    self.studsBehindMin,
                    self.studsBehindMax
                )

                if hitPosition then
                    -- Visualização para debug (opcional)
                    local marker = Instance.new("Part")
                    marker.Anchored   = true
                    marker.CanCollide = false
                    marker.Size       = Vector3.new(0.5, 0.5, 0.5)
                    marker.Color      = Color3.new(0, 1, 0)
                    marker.Material   = Enum.Material.Neon
                    marker.Position   = hitPosition
                    marker.Parent     = Workspace
                    Debris:AddItem(marker, 2)

                    return {
                        Hit     = CFrame.new(hitPosition),
                        Target  = targetNPC,
                        UnitRay = Mouse.UnitRay,
                        X       = Mouse.X,
                        Y       = Mouse.Y
                    }
                end
            end
        end

        return {
            Hit     = Mouse.Hit,
            Target  = Mouse.Target,
            UnitRay = Mouse.UnitRay,
            X       = Mouse.X,
            Y       = Mouse.Y
        }
    end
end
