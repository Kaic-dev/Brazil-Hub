-- AutoBlock: Módulo para bloqueio automático de ataques
-- Estrutura modular, pronto para integração com lógica de detecção de ataque

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Dependência externa para gerenciamento de conexões
local ConnectionManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kaic-dev/Brazil-Hub/main/ConnectionManager"))()

local AutoBlock = {}
AutoBlock.__index = AutoBlock

AutoBlock.enabled = false

-- Construtor
function AutoBlock.new()
    local self = setmetatable({}, AutoBlock)
    self._connMgr = ConnectionManager.new()
    return self
end

-- Função para acionar o bloqueio
function AutoBlock:triggerBlock()
    local player = Players.LocalPlayer
    if not player or not player.Character then return end
    local char = player.Character
    local remotes = char:FindFirstChild("CharacterHandler") and char.CharacterHandler:FindFirstChild("Remotes")
    if not remotes then return end
    local blockRemote = remotes:FindFirstChild("Block")
    if blockRemote and blockRemote:IsA("RemoteEvent") then
        blockRemote:FireServer()
    end
end

-- Função para acionar o desbloqueio
function AutoBlock:triggerUnblock()
    local player = Players.LocalPlayer
    if not player or not player.Character then return end
    local char = player.Character
    local remotes = char:FindFirstChild("CharacterHandler") and char.CharacterHandler:FindFirstChild("Remotes")
    if not remotes then return end
    local unblockRemote = remotes:FindFirstChild("Unblock")
    if unblockRemote and unblockRemote:IsA("RemoteEvent") then
        unblockRemote:FireServer()
    end
end

-- Lógica de detecção de ataque baseada em animação
local ANIMATION_ID = "rbxassetid://3110530226"
local BLOCK_RADIUS = 20 -- studs

function AutoBlock:detectAttack()
    local player = Players.LocalPlayer
    if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
    local myPos = player.Character.HumanoidRootPart.Position
    local found = false
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Humanoid") and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local humanoid = otherPlayer.Character.Humanoid
            local pos = otherPlayer.Character.HumanoidRootPart.Position
            if (myPos - pos).Magnitude <= BLOCK_RADIUS then
                -- Checar animações ativas
                for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                    if track.Animation and (track.Animation.AnimationId == ANIMATION_ID or track.Animation.AnimationId == "3110530226") then
                        found = true
                        break
                    end
                end
            end
        end
        if found then break end
    end
    if found then
        self:triggerBlock()
    else
        self:triggerUnblock()
    end
end

-- Ativa o AutoBlock
function AutoBlock:enable()
    if self.enabled then return end
    self.enabled = true
    -- Exemplo: checar a cada frame
    self._connMgr:add(RunService.Heartbeat:Connect(function()
        if self.enabled then
            self:detectAttack()
        end
    end))
end

-- Desativa o AutoBlock
function AutoBlock:disable()
    self.enabled = false
    self._connMgr:disconnectAll()
end

-- Limpeza
function AutoBlock:destroy()
    self:disable()
    self._connMgr = nil
end

return AutoBlock 
