-- Enhanced Leaderboard Script
-- Integra o sistema original com as melhorias do BetterLeaderboard

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Variáveis do sistema original
local l__MainFrame__1 = script.Parent:WaitForChild("MainFrame")
local u1 = false
local u2 = {}
local l__ScrollingFrame__3 = l__MainFrame__1:WaitForChild("ScrollingFrame")
local l__PlayerLabel__4 = script:WaitForChild("PlayerLabel")
local l__LocalPlayer__5 = Players.LocalPlayer

-- Variáveis do BetterLeaderboard
local BetterLeaderboard = {}
BetterLeaderboard.__index = BetterLeaderboard

-- Cache de cores para evitar criar novos objetos
local COLORS = {
    WHITE = Color3.new(1, 1, 1),
    GRAY = Color3.new(0.592156, 0.560784, 0.560784),
    BLACK = Color3.new(0, 0, 0),
    YELLOW = Color3.fromRGB(255, 214, 81),
    BLUE = Color3.fromRGB(80, 180, 255),
    RED = Color3.new(1, 0, 0),
    GREEN = Color3.new(49/51, 197/255, 26/51)
}

-- Função original para formatar nomes
local function u6(p1, p2, p3, p4, p5, p6)
    if not workspace:FindFirstChild("priv") then
        local v2 = ""
        if p4 == "Owner" then
            local v3
            if p5 == "Female" then
                v3 = "Lady"
            else
                v3 = "Lord"
            end
            v2 = v3
            if p1 == "Ratriel" then
                v2 = "Pontiff"
            end
        end
        local v4 = {}
        if v2 ~= "" then
            table.insert(v4, v2)
        end
        if p1 ~= "" and p1 ~= " " then
            table.insert(v4, p1)
        end
        if p3 ~= "" then
            table.insert(v4, p3)
        end
        local v5 = table.concat(v4, " ")
        local v6 = 0
        if p6 > 0 then
            v6 = 3 + string.len(tostring(p6)) * 3
        end
        local v7 = v6 > 0 and string.rep(" ", v6) .. v5 or v5
        if p2 ~= "" then
            v7 = v7 .. ", " .. p2
        end
        return v7
    else
        local v4 = {}
        if p1 ~= "" and p1 ~= " " then
            return " "..p1
        end
    end
end

-- Função para obter dados do jogador
local function getPlayerData(player)
    if not player or not player.Parent then
        return nil
    end
    
    local leaderstats = player:FindFirstChild("leaderstats")
    if not leaderstats then
        return nil
    end
    
    local data = {
        firstName = leaderstats:FindFirstChild("FirstName") and leaderstats.FirstName.Value or "",
        lastName = leaderstats:FindFirstChild("LastName") and leaderstats.LastName.Value or "",
        uberTitle = leaderstats:FindFirstChild("UberTitle") and leaderstats.UberTitle.Value or "",
        houseRank = leaderstats:FindFirstChild("HouseRank") and leaderstats.HouseRank.Value or "",
        gender = leaderstats:FindFirstChild("Gender") and leaderstats.Gender.Value or "",
        prestige = leaderstats:FindFirstChild("Rank") and leaderstats.Rank.Value or 0,
        maxEdict = leaderstats:FindFirstChild("MaxEdict") and leaderstats.MaxEdict.Value or false,
        hidden = leaderstats:FindFirstChild("Hidden") and leaderstats.Hidden.Value or false,
        leaderstats = leaderstats
    }
    
    return data
end

-- Função melhorada para atualizar a lista de jogadores
local function u7()
    if u1 then
        return
    end
    u1 = true
    
    local v8 = {}
    local v10 = Players:GetPlayers()
    
    for i, v in pairs(v10) do
        local playerData = getPlayerData(v)
        if playerData and u2[v] and not playerData.hidden and playerData.firstName ~= "" then
            table.insert(v8, v)
        elseif u2[v] then
            u2[v].frame.Visible = false
        end
    end
    
    -- Sorting melhorado
    table.sort(v8, function(A, B)
        if not A then return true end
        if not B then return false end
        
        local dataA = getPlayerData(A)
        local dataB = getPlayerData(B)
        
        if not dataA or not dataB then return false end
        
        -- Primeiro por sobrenome
        if dataA.lastName ~= "" and dataB.lastName == "" then
            return true
        end
        if dataA.lastName == "" and dataB.lastName ~= "" then
            return false
        end
        if dataA.lastName < dataB.lastName then
            return true
        end
        if dataB.lastName < dataA.lastName then
            return false
        end
        
        -- Depois por rank da casa
        if dataB.houseRank < dataA.houseRank then
            return true
        end
        if dataA.houseRank < dataB.houseRank then
            return false
        end
        
        -- Por último por nome
        if dataA.firstName < dataB.firstName then
            return true
        end
        if dataB.firstName < dataA.firstName then
            return false
        end
        
        return A.Name < B.Name
    end)
    
    -- Posicionar frames
    for v24, v25 in pairs(v8) do
        local frameData = u2[v25]
        if frameData and frameData.frame then
            frameData.frame.Position = UDim2.new(0, 0, 0, (v24 - 1) * 20)
            frameData.frame.Visible = true
        end
    end
    
    -- Ajustar tamanho do frame
    local v29 = #v8 * 20
    l__MainFrame__1.Size = UDim2.new(0.05, 200, 0, math.min(v29 + 20, 340))
    l__ScrollingFrame__3.CanvasSize = UDim2.new(0, 0, 0, v29)
    
    u1 = false
end

-- Função para trocar câmera (do BetterLeaderboard)
local currentCameraTarget = nil
local originalCameraSubject = nil

local function switchCameraToPlayer(player)
    local camera = workspace.CurrentCamera
    if not camera or not player or not player.Parent then 
        return 
    end
    
    if currentCameraTarget == player then
        -- Reset camera
        if originalCameraSubject and originalCameraSubject.Parent then
            camera.CameraSubject = originalCameraSubject
        else
            local localPlayer = Players.LocalPlayer
            if localPlayer and localPlayer.Character then
                local humanoid = localPlayer.Character:FindFirstChild("Humanoid")
                if humanoid then
                    camera.CameraSubject = humanoid
                end
            end
        end
        currentCameraTarget = nil
        return
    end
    
    if not originalCameraSubject then
        originalCameraSubject = camera.CameraSubject
    end
    
    if not player.Character then 
        return 
    end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid then 
        return 
    end
    
    currentCameraTarget = player
    camera.CameraSubject = humanoid
end

-- Função melhorada para criar player label
local function u8(p9)
    if u2[p9] then
        return
    end
    
    local playerData = getPlayerData(p9)
    if not playerData then
        return
    end
    
    -- Criar frame principal
    local v30 = l__PlayerLabel__4:Clone()
    local l__Prestige__31 = v30:WaitForChild("Prestige")
    
    -- Armazenar dados do frame
    u2[p9] = {
        frame = v30,
        prestige = l__Prestige__31,
        connections = {},
        lastDisplayText = "",
        playerData = playerData
    }
    
    local frameData = u2[p9]
    
    -- Configurar visibilidade inicial
    if playerData.hidden and p9 ~= l__LocalPlayer__5 and p9.UserId ~= 1721299790 then
        v30.Visible = false
    end
    
    -- Função para atualizar display
    local function updateDisplay()
        local currentData = getPlayerData(p9)
        if not currentData then return end
        
        local displayText = u6(
            currentData.firstName,
            currentData.uberTitle,
            currentData.lastName,
            currentData.houseRank,
            currentData.gender,
            currentData.prestige
        )
        
        v30.Text = displayText
        frameData.lastDisplayText = displayText
        
        -- Atualizar prestige
        if currentData.prestige > 0 then
            l__Prestige__31.Text = "#" .. currentData.prestige
            l__Prestige__31.Visible = true
        else
            l__Prestige__31.Visible = false
        end
        
        -- Atualizar cores
        local hasCharacter = p9.Character ~= nil
        local isObserved = (currentCameraTarget == p9)
        
        if currentData.uberTitle == "Destroyer Of Heaven" then
            v30.TextColor3 = COLORS.RED
        elseif currentData.maxEdict then
            v30.TextColor3 = COLORS.YELLOW
        elseif isObserved then
            v30.TextColor3 = COLORS.BLUE
        elseif hasCharacter then
            v30.TextColor3 = COLORS.WHITE
        else
            v30.TextColor3 = COLORS.GRAY
        end
        
        -- Atualizar prestige color
        l__Prestige__31.TextColor3 = v30.TextColor3
    end
    
    -- Função para mostrar username no hover
    local function showUsername()
        local v42 = 0
        if playerData.prestige > 0 then
            v42 = 3 + string.len(tostring(playerData.prestige)) * 3
        end
        local u10 = p9.Name:sub(1, 2) .. "\226\128\142" .. p9.Name:sub(3)
        v30.Text = v42 > 0 and string.rep(" ", v42) .. u10 or u10
        v30.TextTransparency = 0.3
    end
    
    local function hideUsername()
        v30.Text = frameData.lastDisplayText
        v30.TextTransparency = 0
    end
    
    -- Conectar eventos
    frameData.connections.mouseEnter = v30.MouseEnter:Connect(showUsername)
    frameData.connections.mouseLeave = v30.MouseLeave:Connect(hideUsername)
    
    -- Adicionar funcionalidade de câmera (click para observar)
    frameData.connections.mouseClick = v30.MouseButton1Click:Connect(function()
        if p9.Character then
            switchCameraToPlayer(p9)
        end
    end)
    
    -- Conectar mudanças nos leaderstats
    local function connectLeaderstatChange(statName)
        local stat = playerData.leaderstats:FindFirstChild(statName)
        if stat then
            frameData.connections[statName] = stat.Changed:Connect(function()
                updateDisplay()
                u7()
            end)
        end
    end
    
    connectLeaderstatChange("FirstName")
    connectLeaderstatChange("LastName")
    connectLeaderstatChange("UberTitle")
    connectLeaderstatChange("HouseRank")
    connectLeaderstatChange("Gender")
    connectLeaderstatChange("Rank")
    connectLeaderstatChange("MaxEdict")
    connectLeaderstatChange("Hidden")
    
    -- Conectar mudanças de personagem
    frameData.connections.characterAdded = p9.CharacterAdded:Connect(function()
        task.wait(0.1)
        updateDisplay()
        u7()
    end)
    
    frameData.connections.characterRemoving = p9.CharacterRemoving:Connect(function()
        if currentCameraTarget == p9 then
            switchCameraToPlayer(p9) -- Vai resetar a câmera
        end
        updateDisplay()
        u7()
    end)
    
    -- Invocar MaxEdict request
    pcall(function()
        local Requests = ReplicatedStorage:FindFirstChild("Requests")
        if Requests and Requests:FindFirstChild("ShowMaxEdict") then
            Requests.ShowMaxEdict:InvokeServer()
        end
    end)
    
    -- Update inicial
    updateDisplay()
    
    -- Adicionar ao ScrollingFrame
    pcall(function()
        v30.Parent = l__ScrollingFrame__3
    end)
    
    u7()
    return v30
end

-- Função para remover player
local function u11(p11)
    if not u2[p11] then
        return
    end
    
    local frameData = u2[p11]
    
    -- Disconnect all connections
    for _, connection in pairs(frameData.connections) do
        if connection and connection.Connected then
            connection:Disconnect()
        end
    end
    
    -- Reset camera if this player was being observed
    if currentCameraTarget == p11 then
        switchCameraToPlayer(p11) -- Vai resetar a câmera
    end
    
    -- Destroy frame
    if frameData.frame then
        frameData.frame:Destroy()
    end
    
    u2[p11] = nil
    u7()
end

-- Conectar eventos principais
Players.PlayerAdded:Connect(function(player)
    task.wait(0.1)
    u8(player)
end)

Players.PlayerRemoving:Connect(function(player)
    u11(player)
end)

-- Sistema de enable/disable baseado em Ingame
l__LocalPlayer__5.ChildRemoved:Connect(function(ch)
    if ch.Name == "Ingame" then
        script.Parent.Enabled = false
    end
end)

l__LocalPlayer__5.ChildAdded:Connect(function(ch)
    if ch.Name == "Ingame" then
        script.Parent.Enabled = true
    end
end)

-- Update colors periodically
RunService.Heartbeat:Connect(function()
    for player, frameData in pairs(u2) do
        if frameData and frameData.frame and frameData.frame.Parent and player and player.Parent then
            local hasCharacter = player.Character ~= nil
            local isObserved = (currentCameraTarget == player)
            local currentData = getPlayerData(player)
            
            if currentData then
                local textColor
                if currentData.uberTitle == "Destroyer Of Heaven" then
                    textColor = COLORS.RED
                elseif currentData.maxEdict then
                    textColor = COLORS.YELLOW
                elseif isObserved then
                    textColor = COLORS.BLUE
                elseif hasCharacter then
                    textColor = COLORS.WHITE
                else
                    textColor = COLORS.GRAY
                end
                
                frameData.frame.TextColor3 = textColor
                frameData.prestige.TextColor3 = textColor
                frameData.frame.TextTransparency = hasCharacter and 0 or 0.3
            end
        end
    end
end)

-- Inicializar para jogadores existentes
for _, player in pairs(Players:GetPlayers()) do
    task.spawn(function()
        u8(player)
    end)
end

print("Enhanced Leaderboard carregado com sucesso!")
