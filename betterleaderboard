-- betterleaderboard.lua
-- Handler OOP para criar um leaderboard customizado
-- Uso: local BetterLeaderboard = require(path); local leaderboard = BetterLeaderboard.new(); leaderboard:enable()/leaderboard:disable()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Carrega o mÃ³dulo Utils
local Utils = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kaic-dev/Brazil-Hub/refs/heads/main/Utils"))()
local utils = Utils.new()

-- Cache de cores para evitar criar novos objetos
local COLORS = {
    WHITE = Color3.new(1, 1, 1),
    GRAY = Color3.new(0.243137, 0.243137, 0.243137),
    BLACK = Color3.new(0, 0, 0),
    GREEN = Color3.new(49/51, 197/255, 26/51)
}

local BetterLeaderboard = {}
BetterLeaderboard.__index = BetterLeaderboard

function BetterLeaderboard.new()
    local self = setmetatable({}, BetterLeaderboard)
    self.enabled = false
    self.connections = {}
    self.originalLeaderboardGui = nil
    self.customLeaderboardGui = nil
    self.characterAddedConnection = nil
    self.characterRemovingConnection = nil
    self.playerAddedConnection = nil
    self.playerRemovingConnection = nil
    self.updateScheduled = false
    self.currentCameraTarget = nil
    self.originalCameraSubject = nil
    self.cameraConnections = {}
    self.playerFrames = {}
    self.lastColorUpdate = 0
    self.colorUpdateInterval = 1
    return self
end

function BetterLeaderboard:getPlayerGui()
    local player = Players.LocalPlayer
    return player:FindFirstChildOfClass("PlayerGui") or player:WaitForChild("PlayerGui", 5)
end

function BetterLeaderboard:findOriginalLeaderboardGui()
    local playerGui = self:getPlayerGui()
    return playerGui and playerGui:FindFirstChild("LeaderboardGui")
end

function BetterLeaderboard:isCustomLeaderboardValid()
    return self.customLeaderboardGui and self.customLeaderboardGui.Parent and self.customLeaderboardGui:FindFirstChild("Leaderboard") and self.customLeaderboardGui.Leaderboard:FindFirstChild("ScrollingFrame")
end

function BetterLeaderboard:scheduleUpdate()
    if self.updateScheduled then return end
    self.updateScheduled = true
    task.spawn(function()
        task.wait(2)
        if self.enabled then
            self:updatePlayerList()
        end
        self.updateScheduled = false
    end)
end

function BetterLeaderboard:switchCameraToPlayer(player)
    local camera = workspace.CurrentCamera
    if not camera then return end
    if self.currentCameraTarget == player then
        self:resetCameraToLocalPlayer()
        return
    end
    if not self.originalCameraSubject then
        self.originalCameraSubject = camera.CameraSubject
    end
    if not player.Character then return end
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid then return end
    self.currentCameraTarget = player
    camera.CameraSubject = humanoid
    local connection = player.CharacterRemoving:Connect(function()
        if self.currentCameraTarget == player then
            self:resetCameraToLocalPlayer()
        end
        connection:Disconnect()
    end)
    table.insert(self.cameraConnections, connection)
end

function BetterLeaderboard:resetCameraToLocalPlayer()
    local camera = workspace.CurrentCamera
    if not camera then return end
    local character = Players.LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            camera.CameraSubject = humanoid
        end
    end
    self.currentCameraTarget = nil
    for _, connection in ipairs(self.cameraConnections) do
        if connection and connection.Disconnect then
            connection:Disconnect()
        end
    end
    self.cameraConnections = {}
end

function BetterLeaderboard:createCustomLeaderboard()
    if self.customLeaderboardGui then
        self.customLeaderboardGui:Destroy()
        self.customLeaderboardGui = nil
    end
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BetterLeaderboardGui"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local leaderboardButton = Instance.new("ImageButton")
    leaderboardButton.Name = "Leaderboard"
    leaderboardButton.ScaleType = Enum.ScaleType.Slice
    leaderboardButton.ImageTransparency = 0.8
    leaderboardButton.Size = UDim2.new(0.05, 150, 0, 240)
    leaderboardButton.AnchorPoint = Vector2.new(1, 0)
    leaderboardButton.Image = "rbxassetid://1327087642"
    leaderboardButton.BackgroundTransparency = 1
    leaderboardButton.Position = UDim2.new(1, 0, 0, 0)
    leaderboardButton.BackgroundColor3 = COLORS.WHITE
    leaderboardButton.BorderSizePixel = 0
    leaderboardButton.SliceCenter = Rect.new(Vector2.new(20, 20), Vector2.new(190, 190))
    leaderboardButton.Parent = screenGui

    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.ScrollBarImageColor3 = COLORS.GREEN
    scrollingFrame.MidImage = "rbxassetid://3515608813"
    scrollingFrame.Active = true
    scrollingFrame.ScrollBarThickness = 10
    scrollingFrame.BackgroundTransparency = 1
    scrollingFrame.BackgroundColor3 = COLORS.WHITE
    scrollingFrame.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
    scrollingFrame.Position = UDim2.new(-0.07, 0, 0.04, 0)
    scrollingFrame.TopImage = "rbxassetid://3515609176"
    scrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
    scrollingFrame.Size = UDim2.new(1.05, -10, 1, -20)
    scrollingFrame.BottomImage = "rbxassetid://3515608177"
    scrollingFrame.BorderSizePixel = 0
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 330)
    scrollingFrame.Name = "ScrollingFrame"
    scrollingFrame.Parent = leaderboardButton

    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Parent = scrollingFrame

    local playerGui = self:getPlayerGui()
    if playerGui then
        screenGui.Parent = playerGui
    end
    return screenGui, scrollingFrame
end

function BetterLeaderboard:createPlayerFrame(player)
    if not player or not player:IsDescendantOf(Players) then return end
    local frame = Instance.new("Frame")
    frame.BackgroundTransparency = 1
    frame.BorderColor3 = COLORS.BLACK
    frame.SizeConstraint = Enum.SizeConstraint.RelativeXX
    frame.Size = UDim2.new(1, 0, 0.1, 0)
    frame.BorderSizePixel = 0
    frame.BackgroundColor3 = COLORS.WHITE

    local hasCharacter = player.Character ~= nil
    local textColor = hasCharacter and COLORS.WHITE or COLORS.GRAY

    local prestigeData = utils:getPlayerPrestigeData(player)
    local prestigeLevel = prestigeData.level or 0

    local prestigeButton = Instance.new("TextButton")
    prestigeButton.Font = Enum.Font.SourceSansSemibold
    prestigeButton.TextColor3 = textColor
    prestigeButton.TextTransparency = 0.2
    prestigeButton.Text = "#" .. prestigeLevel
    prestigeButton.TextStrokeTransparency = 0.5
    prestigeButton.Size = UDim2.new(0, 35, 0, 20)
    prestigeButton.BackgroundTransparency = 1
    prestigeButton.TextXAlignment = Enum.TextXAlignment.Left
    prestigeButton.Name = "Prestige"
    prestigeButton.TextSize = 16
    prestigeButton.BorderSizePixel = 0
    prestigeButton.Visible = prestigeLevel > 0
    prestigeButton.Parent = frame

    local playerLabel = Instance.new("TextButton")
    playerLabel.Font = Enum.Font.SourceSansSemibold
    playerLabel.TextColor3 = textColor
    playerLabel.BorderColor3 = COLORS.BLACK
    playerLabel.Text = utils:getPlayerRogueDisplay(player) or player.Name
    playerLabel.TextXAlignment = Enum.TextXAlignment.Left
    playerLabel.TextStrokeTransparency = 0.5
    playerLabel.Size = UDim2.new(1.5, 0, 0, 20)
    playerLabel.BackgroundTransparency = 1
    playerLabel.Position = UDim2.new(0, 30, 0, 0)
    playerLabel.TextSize = 18
    playerLabel.Name = "PlayerLabel"
    playerLabel.BorderSizePixel = 0
    playerLabel.Parent = frame

    local function onPlayerLabelClick()
        if self.enabled and hasCharacter then
            self:switchCameraToPlayer(player)
        end
    end

    playerLabel.MouseButton1Click:Connect(onPlayerLabelClick)
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 and hasCharacter then
            onPlayerLabelClick()
        end
    end)

    frame.PlayerLabel = playerLabel
    frame.Prestige = prestigeButton
    frame.Player = player
    frame.HasCharacter = hasCharacter
    self.playerFrames[player] = frame
    return frame
end

return BetterLeaderboard
