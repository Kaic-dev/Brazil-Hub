-- PlayerESPHandler.lua
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Carrega o módulo Utils
local Utils = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kaic-dev/Brazil-Hub/refs/heads/main/Utils"))()
local utils = Utils.new()

local function getBestAdornee(character)
    return character:FindFirstChild("Head")
        or character:FindFirstChild("UpperTorso")
        or character:FindFirstChild("Torso")
        or character:FindFirstChildWhichIsA("BasePart")
end

local PlayerESP = {}
PlayerESP.__index = PlayerESP

PlayerESP.defaultTextSize = 14
PlayerESP.defaultTextColor = Color3.new(1,1,1)

-- Store display config (default: all true)
PlayerESP.displayConfig = {
    showPlayerName = true,
    showRogueName = true,
    showEdict = true,
    showHealth = true,
    showHealthPercent = true
}

function PlayerESP.new()
    local self = setmetatable({}, PlayerESP)
    self.enabled = false
    self.connections = {}
    self.espBillboards = {}
    return self
end

function PlayerESP:createBillboard(player)
    local character = player.Character
    if not character or character:FindFirstChild("PlayerESP") then
        return
    end

    local adornee = getBestAdornee(character)
    if not adornee then
        return
    end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PlayerESP"
    billboard.LightInfluence = 1
    billboard.Active = true
    billboard.Adornee = adornee
    billboard.ClipsDescendants = true
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 500, 0, 100)
    billboard.Parent = adornee

    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 3)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Parent = billboard

    local nameLabel = Instance.new("TextLabel")
    nameLabel.FontSize = Enum.FontSize.Size14
    nameLabel.TextColor3 = Color3.new(1,1,1)
    nameLabel.BorderColor3 = Color3.new(0,0,0)
    nameLabel.Text = "[" .. player.Name .. "]"
    nameLabel.TextStrokeTransparency = 0.5
    nameLabel.Font = Enum.Font.SourceSansSemibold
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextSize = 14
    nameLabel.Size = UDim2.new(1,0,0.1,0)
    nameLabel.BorderSizePixel = 0
    nameLabel.BackgroundColor3 = Color3.new(1,1,1)
    nameLabel.Parent = billboard

    local infoFrame = Instance.new("Frame")
    infoFrame.BackgroundTransparency = 1
    infoFrame.BorderColor3 = Color3.new(0,0,0)
    infoFrame.Size = UDim2.new(1,0,0.1,0)
    infoFrame.BorderSizePixel = 0
    infoFrame.BackgroundColor3 = Color3.new(1,1,1)
    infoFrame.Parent = billboard

    local infoLayout = Instance.new("UIListLayout")
    infoLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    infoLayout.FillDirection = Enum.FillDirection.Horizontal
    infoLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    infoLayout.SortOrder = Enum.SortOrder.LayoutOrder
    infoLayout.Parent = infoFrame

    local rogueLabel = Instance.new("TextLabel")
    rogueLabel.FontSize = Enum.FontSize.Size14
    rogueLabel.TextColor3 = Color3.new(1,1,1)
    rogueLabel.BorderColor3 = Color3.new(0,0,0)
    rogueLabel.Text = "[Lord Abadon Terrified]"
    rogueLabel.TextStrokeTransparency = 0.5
    rogueLabel.AutomaticSize = Enum.AutomaticSize.X
    rogueLabel.Font = Enum.Font.SourceSansSemibold
    rogueLabel.BackgroundTransparency = 1
    rogueLabel.TextSize = 14
    rogueLabel.Size = UDim2.new(0,0,0.1,0)
    rogueLabel.BorderSizePixel = 0
    rogueLabel.BackgroundColor3 = Color3.new(1,1,1)
    rogueLabel.Parent = infoFrame

    local edictLabel = Instance.new("TextLabel")
    edictLabel.FontSize = Enum.FontSize.Size14
    edictLabel.TextColor3 = Color3.new(1,1,1)
    edictLabel.BorderColor3 = Color3.new(0,0,0)
    edictLabel.Text = "[Healer]"
    edictLabel.TextStrokeTransparency = 0.5
    edictLabel.Font = Enum.Font.SourceSansSemibold
    edictLabel.BackgroundTransparency = 1
    edictLabel.AutomaticSize = Enum.AutomaticSize.X
    edictLabel.TextSize = 14
    edictLabel.Size = UDim2.new(0,0,0.1,0)
    edictLabel.BorderSizePixel = 0
    edictLabel.BackgroundColor3 = Color3.new(1,1,1)
    edictLabel.Parent = infoFrame

    local hpFrame = Instance.new("Frame")
    hpFrame.BackgroundTransparency = 1
    hpFrame.BorderColor3 = Color3.new(0,0,0)
    hpFrame.Size = UDim2.new(1,0,0.1,0)
    hpFrame.BorderSizePixel = 0
    hpFrame.BackgroundColor3 = Color3.new(1,1,1)
    hpFrame.Parent = billboard

    local hpLayout = Instance.new("UIListLayout")
    hpLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    hpLayout.FillDirection = Enum.FillDirection.Horizontal
    hpLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    hpLayout.SortOrder = Enum.SortOrder.LayoutOrder
    hpLayout.Parent = hpFrame

    local hpLabel = Instance.new("TextLabel")
    hpLabel.FontSize = Enum.FontSize.Size14
    hpLabel.TextColor3 = Color3.new(1,1,1)
    hpLabel.BorderColor3 = Color3.new(0,0,0)
    hpLabel.Text = "[100/100]"
    hpLabel.TextStrokeTransparency = 0.5
    hpLabel.Font = Enum.Font.SourceSansSemibold
    hpLabel.BackgroundTransparency = 1
    hpLabel.AutomaticSize = Enum.AutomaticSize.X
    hpLabel.TextSize = 14
    hpLabel.Size = UDim2.new(0,0,0.1,0)
    hpLabel.BorderSizePixel = 0
    hpLabel.BackgroundColor3 = Color3.new(1,1,1)
    hpLabel.Parent = hpFrame

    local hpPercLabel = Instance.new("TextLabel")
    hpPercLabel.FontSize = Enum.FontSize.Size14
    hpPercLabel.TextColor3 = Color3.new(1,1,1)
    hpPercLabel.BorderColor3 = Color3.new(0,0,0)
    hpPercLabel.Text = "[100%]"
    hpPercLabel.TextStrokeTransparency = 0.5
    hpPercLabel.Font = Enum.Font.SourceSansSemibold
    hpPercLabel.BackgroundTransparency = 1
    hpPercLabel.AutomaticSize = Enum.AutomaticSize.X
    hpPercLabel.TextSize = 14
    hpPercLabel.Size = UDim2.new(0,0,0.1,0)
    hpPercLabel.BorderSizePixel = 0
    hpPercLabel.BackgroundColor3 = Color3.new(1,1,1)
    hpPercLabel.Parent = hpFrame

    self.espBillboards[player] = {
        billboard = billboard,
        nameLabel = nameLabel,
        rogueLabel = rogueLabel,
        edictLabel = edictLabel,
        hpLabel = hpLabel,
        hpPercLabel = hpPercLabel,
        infoFrame = infoFrame,
        hpFrame = hpFrame
    }
    -- Apply display config to this billboard
    self:setDisplayConfig(self.displayConfig)
end

function PlayerESP:removeBillboard(player)
    local data = self.espBillboards[player]
    if data and data.billboard then
        data.billboard:Destroy()
        self.espBillboards[player] = nil
    end
end

function PlayerESP:updateBillboards()
    -- Otimização: throttling para atualizar no máximo a cada 0.1s
    self._lastUpdate = self._lastUpdate or 0
    if tick() - self._lastUpdate < 0.1 then return end
    self._lastUpdate = tick()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and player.Character then
            local data = self.espBillboards[player]
            if not data then
                self:createBillboard(player)
                data = self.espBillboards[player]
            end
            if data then
                -- Checa se houve mudança relevante antes de atualizar
                local rogueName = utils:getPlayerRogueDisplay(player)
                local edict = utils:getPlayerEdictDisplay(player)
                local healthDisplay, healthPercentDisplay = utils:getPlayerHealthDisplay(player)
                if data._last == nil or data._last.rogueName ~= rogueName or data._last.edict ~= edict or data._last.healthDisplay ~= healthDisplay or data._last.healthPercentDisplay ~= healthPercentDisplay then
                    data.nameLabel.Text = "[" .. player.Name .. "]"
                    data.rogueLabel.Text = "[" .. rogueName .. "]"
                    data.edictLabel.Text = "[" .. edict .. "]"
                    data.hpLabel.Text = "[" .. healthDisplay .. "]"
                    data.hpPercLabel.Text = "[" .. healthPercentDisplay .. "]"
                    data._last = {
                        rogueName = rogueName,
                        edict = edict,
                        healthDisplay = healthDisplay,
                        healthPercentDisplay = healthPercentDisplay
                    }
                end
                -- Apply display config to this billboard (in case toggles changed)
                self:setDisplayConfig(self.displayConfig)
            end
        end
    end
end

function PlayerESP:enable()
    self.enabled = true
    self:cleanup()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            self:createBillboard(player)
        else
        end
    end
    table.insert(self.connections, Players.PlayerAdded:Connect(function(player)
        if player ~= Players.LocalPlayer then
            self:createBillboard(player)
        else
        end
    end))
    table.insert(self.connections, Players.PlayerRemoving:Connect(function(player)
        self:removeBillboard(player)
    end))
    self.updateConnection = RunService.RenderStepped:Connect(function()
        self:updateBillboards()
    end)
end

function PlayerESP:disable()
    self.enabled = false
    self:cleanup()
end

function PlayerESP:cleanup()
    for _, conn in ipairs(self.connections) do
        if conn and conn.Disconnect then conn:Disconnect() end
    end
    self.connections = {}
    if self.updateConnection and self.updateConnection.Disconnect then
        self.updateConnection:Disconnect()
    end
    self.updateConnection = nil
    for player, _ in pairs(self.espBillboards) do
        self:removeBillboard(player)
    end
end

function PlayerESP:setTextSize(size)
    self.defaultTextSize = size
    for _, data in pairs(self.espBillboards) do
        if data.nameLabel then data.nameLabel.TextSize = size end
        if data.rogueLabel then data.rogueLabel.TextSize = size end
        if data.edictLabel then data.edictLabel.TextSize = size end
        if data.hpLabel then data.hpLabel.TextSize = size end
        if data.hpPercLabel then data.hpPercLabel.TextSize = size end
    end
end

function PlayerESP:setTextColor(color)
    self.defaultTextColor = color
    for _, data in pairs(self.espBillboards) do
        if data.nameLabel then data.nameLabel.TextColor3 = color end
        if data.rogueLabel then data.rogueLabel.TextColor3 = color end
        if data.edictLabel then data.edictLabel.TextColor3 = color end
        if data.hpLabel then data.hpLabel.TextColor3 = color end
        if data.hpPercLabel then data.hpPercLabel.TextColor3 = color end
    end
end

-- Method to update display config from outside
function PlayerESP:setDisplayConfig(config)
    self.displayConfig = config or self.displayConfig
    -- For each billboard, add/remove elements from layout by setting Parent
    for _, data in pairs(self.espBillboards) do
        -- Player Name
        if data.nameLabel then
            data.nameLabel.Parent = (self.displayConfig.showPlayerName ~= false) and data.billboard or nil
        end
        -- Rogue Name
        if data.rogueLabel and data.infoFrame then
            data.rogueLabel.Parent = (self.displayConfig.showRogueName ~= false) and data.infoFrame or nil
        end
        -- Edict
        if data.edictLabel and data.infoFrame then
            data.edictLabel.Parent = (self.displayConfig.showEdict ~= false) and data.infoFrame or nil
        end
        -- Health
        if data.hpLabel and data.hpFrame then
            data.hpLabel.Parent = (self.displayConfig.showHealth ~= false) and data.hpFrame or nil
        end
        -- Health Percent
        if data.hpPercLabel and data.hpFrame then
            data.hpPercLabel.Parent = (self.displayConfig.showHealthPercent ~= false) and data.hpFrame or nil
        end
    end
end

return PlayerESP
