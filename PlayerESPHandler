-- PlayerESPHandler.lua
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local function getBestAdornee(character)
    return character:FindFirstChild("Head")
        or character:FindFirstChild("UpperTorso")
        or character:FindFirstChild("Torso")
        or character:FindFirstChildWhichIsA("BasePart")
end

local PlayerESP = {}
PlayerESP.__index = PlayerESP

PlayerESP.defaultTextSize = 14

function PlayerESP.new()
    local self = setmetatable({}, PlayerESP)
    self.enabled = false
    self.connections = {}
    self.espBillboards = {}
    return self
end

function PlayerESP:createBillboard(player)
    print("[PlayerESP] Tentando criar Billboard para:", player.Name)
    local character = player.Character
    if not character then
        print("[PlayerESP] Character não existe para:", player.Name)
        return
    end
    if character:FindFirstChild("PlayerESP") then
        print("[PlayerESP] Já existe Billboard para:", player.Name)
        return
    end

    local adornee = getBestAdornee(character)
    if not adornee then
        print("[PlayerESP] Nenhum Adornee válido para:", player.Name)
        return
    end

    -- BillboardGui
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PlayerESP"
    billboard.LightInfluence = 1
    billboard.Active = true
    billboard.Adornee = adornee
    billboard.ClipsDescendants = true
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 500, 0, 100)
    billboard.Parent = adornee

    -- UIListLayout (vertical)
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 3)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Parent = billboard

    -- TextLabel: [PlayerName]
    local nameLabel = Instance.new("TextLabel")
    nameLabel.FontSize = Enum.FontSize.Size14
    nameLabel.TextColor3 = Color3.new(1,1,1)
    nameLabel.BorderColor3 = Color3.new(0,0,0)
    nameLabel.Text = "[" .. player.Name .. "]"
    nameLabel.TextStrokeTransparency = 0.5
    nameLabel.Font = Enum.Font.SourceSansSemibold
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextSize = 14
    nameLabel.Size = UDim2.new(1,0,0.1,0)
    nameLabel.BorderSizePixel = 0
    nameLabel.BackgroundColor3 = Color3.new(1,1,1)
    nameLabel.Parent = billboard

    -- Frame: RogueName + Edict
    local infoFrame = Instance.new("Frame")
    infoFrame.BackgroundTransparency = 1
    infoFrame.BorderColor3 = Color3.new(0,0,0)
    infoFrame.Size = UDim2.new(1,0,0.1,0)
    infoFrame.BorderSizePixel = 0
    infoFrame.BackgroundColor3 = Color3.new(1,1,1)
    infoFrame.Parent = billboard

    local infoLayout = Instance.new("UIListLayout")
    infoLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    infoLayout.FillDirection = Enum.FillDirection.Horizontal
    infoLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    infoLayout.SortOrder = Enum.SortOrder.LayoutOrder
    infoLayout.Parent = infoFrame

    -- TextLabel: [Lord Abadon Terrified]
    local rogueLabel = Instance.new("TextLabel")
    rogueLabel.FontSize = Enum.FontSize.Size14
    rogueLabel.TextColor3 = Color3.new(1,1,1)
    rogueLabel.BorderColor3 = Color3.new(0,0,0)
    rogueLabel.Text = "[Lord Abadon Terrified]"
    rogueLabel.TextStrokeTransparency = 0.5
    rogueLabel.AutomaticSize = Enum.AutomaticSize.X
    rogueLabel.Font = Enum.Font.SourceSansSemibold
    rogueLabel.BackgroundTransparency = 1
    rogueLabel.TextSize = 14
    rogueLabel.Size = UDim2.new(0,0,0.1,0)
    rogueLabel.BorderSizePixel = 0
    rogueLabel.BackgroundColor3 = Color3.new(1,1,1)
    rogueLabel.Parent = infoFrame

    -- TextLabel: [Healer]
    local edictLabel = Instance.new("TextLabel")
    edictLabel.FontSize = Enum.FontSize.Size14
    edictLabel.TextColor3 = Color3.new(1,1,1)
    edictLabel.BorderColor3 = Color3.new(0,0,0)
    edictLabel.Text = "[Healer]"
    edictLabel.TextStrokeTransparency = 0.5
    edictLabel.Font = Enum.Font.SourceSansSemibold
    edictLabel.BackgroundTransparency = 1
    edictLabel.AutomaticSize = Enum.AutomaticSize.X
    edictLabel.TextSize = 14
    edictLabel.Size = UDim2.new(0,0,0.1,0)
    edictLabel.BorderSizePixel = 0
    edictLabel.BackgroundColor3 = Color3.new(1,1,1)
    edictLabel.Parent = infoFrame

    -- Frame: HP
    local hpFrame = Instance.new("Frame")
    hpFrame.BackgroundTransparency = 1
    hpFrame.BorderColor3 = Color3.new(0,0,0)
    hpFrame.Size = UDim2.new(1,0,0.1,0)
    hpFrame.BorderSizePixel = 0
    hpFrame.BackgroundColor3 = Color3.new(1,1,1)
    hpFrame.Parent = billboard

    local hpLayout = Instance.new("UIListLayout")
    hpLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    hpLayout.FillDirection = Enum.FillDirection.Horizontal
    hpLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    hpLayout.SortOrder = Enum.SortOrder.LayoutOrder
    hpLayout.Parent = hpFrame

    -- TextLabel: [100/100]
    local hpLabel = Instance.new("TextLabel")
    hpLabel.FontSize = Enum.FontSize.Size14
    hpLabel.TextColor3 = Color3.new(1,1,1)
    hpLabel.BorderColor3 = Color3.new(0,0,0)
    hpLabel.Text = "[100/100]"
    hpLabel.TextStrokeTransparency = 0.5
    hpLabel.Font = Enum.Font.SourceSansSemibold
    hpLabel.BackgroundTransparency = 1
    hpLabel.AutomaticSize = Enum.AutomaticSize.X
    hpLabel.TextSize = 14
    hpLabel.Size = UDim2.new(0,0,0.1,0)
    hpLabel.BorderSizePixel = 0
    hpLabel.BackgroundColor3 = Color3.new(1,1,1)
    hpLabel.Parent = hpFrame

    -- TextLabel: [100%]
    local hpPercLabel = Instance.new("TextLabel")
    hpPercLabel.FontSize = Enum.FontSize.Size14
    hpPercLabel.TextColor3 = Color3.new(1,1,1)
    hpPercLabel.BorderColor3 = Color3.new(0,0,0)
    hpPercLabel.Text = "[100%]"
    hpPercLabel.TextStrokeTransparency = 0.5
    hpPercLabel.Font = Enum.Font.SourceSansSemibold
    hpPercLabel.BackgroundTransparency = 1
    hpPercLabel.AutomaticSize = Enum.AutomaticSize.X
    hpPercLabel.TextSize = 14
    hpPercLabel.Size = UDim2.new(0,0,0.1,0)
    hpPercLabel.BorderSizePixel = 0
    hpPercLabel.BackgroundColor3 = Color3.new(1,1,1)
    hpPercLabel.Parent = hpFrame

    print("[PlayerESP] Billboard criado para:", player.Name)
    self.espBillboards[player] = {
        billboard = billboard,
        nameLabel = nameLabel,
        rogueLabel = rogueLabel,
        edictLabel = edictLabel,
        hpLabel = hpLabel,
        hpPercLabel = hpPercLabel
    }
end

function PlayerESP:removeBillboard(player)
    local data = self.espBillboards[player]
    if data and data.billboard then
        print("[PlayerESP] Removendo Billboard de:", player.Name)
        data.billboard:Destroy()
    end
    self.espBillboards[player] = nil
end

function PlayerESP:updateBillboards()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and player.Character then
            local data = self.espBillboards[player]
            if not data then
                self:createBillboard(player)
                data = self.espBillboards[player]
            end
            if data then
                -- Atualize os valores aqui (exemplo fixo, troque pela lógica real)
                data.nameLabel.Text = player.Name
                -- Rogue/Lord/Lady
                local RogueName = tostring(player:GetAttribute("FirstName") or "")
                local LastName = tostring(player:GetAttribute("LastName") or "")
                local HouseRank = player:GetAttribute("HouseRank")
                local Gender = player:GetAttribute("Gender")
                if HouseRank == "Owner" and LastName ~= "" then
                    if Gender == "Male" then
                        data.rogueLabel.Text = string.format("[Lord %s %s]", RogueName, LastName)
                    elseif Gender == "Female" then
                        data.rogueLabel.Text = string.format("[Lady %s %s]", RogueName, LastName)
                    end
                else
                    if LastName ~= "" then
                        data.rogueLabel.Text = string.format("[%s %s]", RogueName, LastName)
                    else
                        data.rogueLabel.Text = string.format("[%s]", RogueName)
                    end
                end
                -- Edict (placeholder, pronto para lógica futura)
                data.edictLabel.Text = "[Healer]"
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    local hp = math.floor(humanoid.Health)
                    local max = math.floor(humanoid.MaxHealth)
                    local perc = math.floor((hp/max)*100)
                    data.hpLabel.Text = string.format("[%d/%d][%d%%]", hp, max, perc)
                    print(string.format("[PlayerESP] Atualizando HP de %s: [%d/%d][%d%%]", player.Name, hp, max, perc))
                else
                    data.hpLabel.Text = "[?/?][?%]"
                    print("[PlayerESP] Humanoid não encontrado para:", player.Name)
                end
            end
        else
            if player == Players.LocalPlayer then
                print("[PlayerESP] Ignorando LocalPlayer:", player.Name)
            elseif not player.Character then
                print("[PlayerESP] Player sem Character:", player.Name)
            end
        end
    end
end

function PlayerESP:enable()
    print("[PlayerESP] ENABLE chamado")
    self.enabled = true
    self:cleanup()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            print("[PlayerESP] enable: criando Billboard para:", player.Name)
            self:createBillboard(player)
        else
            print("[PlayerESP] enable: ignorando LocalPlayer:", player.Name)
        end
    end
    table.insert(self.connections, Players.PlayerAdded:Connect(function(player)
        if player ~= Players.LocalPlayer then
            print("[PlayerESP] PlayerAdded: criando Billboard para:", player.Name)
            self:createBillboard(player)
        else
            print("[PlayerESP] PlayerAdded: ignorando LocalPlayer:", player.Name)
        end
    end))
    table.insert(self.connections, Players.PlayerRemoving:Connect(function(player)
        print("[PlayerESP] PlayerRemoving:", player.Name)
        self:removeBillboard(player)
    end))
    self.updateConnection = RunService.RenderStepped:Connect(function()
        self:updateBillboards()
    end)
end

function PlayerESP:disable()
    print("[PlayerESP] DISABLE chamado")
    self.enabled = false
    self:cleanup()
end

function PlayerESP:cleanup()
    print("[PlayerESP] Cleanup chamado")
    for _, conn in ipairs(self.connections) do
        if conn and conn.Disconnect then conn:Disconnect() end
    end
    self.connections = {}
    if self.updateConnection and self.updateConnection.Disconnect then
        self.updateConnection:Disconnect()
    end
    self.updateConnection = nil
    for player, _ in pairs(self.espBillboards) do
        self:removeBillboard(player)
    end
end

function PlayerESP:setTextSize(size)
    self.defaultTextSize = size
    for _, data in pairs(self.espBillboards) do
        if data.nameLabel then data.nameLabel.TextSize = size end
        if data.rogueLabel then data.rogueLabel.TextSize = size end
        if data.edictLabel then data.edictLabel.TextSize = size end
        if data.hpLabel then data.hpLabel.TextSize = size end
        if data.hpPercLabel then data.hpPercLabel.TextSize = size end
    end
end

return PlayerESP
